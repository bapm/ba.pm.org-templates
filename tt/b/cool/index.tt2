[%
META title       = "B::Cool";
META description = "Vychytávky zo sveta Perl-u";
META keywords    = "Perl, cool, prečo";

META no_en = 1;
%]

<h1>B::Cool</h1>

<p>Pre každého pojem cool alebo čo to znamená byť zaujímavý znemaná niečo
iné. Rovnako keď chceme zaujať musíme vedieť čím. Asi by sme naše staré mamy
neočarili ukážkami z live koncertu Metalicky, na druhú stranu snažiť sa
zaujať tínedžera s operetou tiež nebude veľmy úspešné.
</p>

<p>Preto sú nasledujúce cool veci týkajúce sa programovacieho jazyka Perl
usporiadané podľa zamerania.
</p>

<h3>Čo ponúka Perl pre:</h3>

<ul>
	<li><a href="#itkonzument">Bežného IT konzumenta</a></li>
	<li><a href="#biochemik">Biochemika</a></li>
	<li><a href="#filozof">Filozofa</a></li>
	<li><a href="#financnik">Finančíka</a></li>
	<li><a href="#hacker">Hackera</a></li>
	<li><a href="#admin">Unix administrátora</a></li>
	<li><a href="#manager">Manažéra programátorskéha tímu</a></li>
	<li><a href="#plprogramátor">Perl programátora</a></li>
	<li>
		<ul>
		    <li><a href="#zaciatocnik">Začiatočníka</a></li>
		    <li><a href="#pokrocily">Pokročilého</a></li>
		    <li><a href="#gurusk">Gurua</a></li>
		</ul>
	</li>
	<li><a href="#zena">Ženu</a></li>
</ul>

<a name="itkonzument"></a>
<h3>pre Bežného IT konzumenta</h3>

<p>V programovacom jazyku Perl bolo napísaných veľké množstvo
úspešných projektov, možno používate práve jeden z nich:
</p>

<ul>
    <li><a href="http://cyclone3.org/">Cyclone3</a> Open-Source Web 2.0 &amp; Application Framework based primary on Perl and XUL.</li>
    <li>Hiveminder - <a href="http://hiveminder.com/">hiveminder.com</a></li>
    <li>
    	<a href="http://www.icdevgroup.org/i/dev">Interchange</a>
    	- <a href="http://backcountry.com/">backcountry.com</a>,
    		<a href="http://recchiuti.com/">recchiuti.com</a>,
    		<a href="http://surroundsolutions.com/">surroundsolutions.com</a>,
    		<a href="http://citypass.com/">citypass.com</a>,
    		<a href="http://musicalheritage.com/">musicalheritage.com</a>,
    		a <a href="http://www.icdevgroup.org/i/dev/hall">mnohé ďalšie</a>
    </li>
    <li>i use this - <a href="http://iusethis.com/">iusethis.com</a></li>
    <li><a href="http://www.bestpractical.com/rt/">RT</a> - <a href="http://rt.perl.org/">rt.perl.org</a></li>
    <li><a href="http://twiki.org/">TWiki</a> - <a href="http://twiki.org/cgi-bin/view/Main/TWikiSuccessStories">TWiki Success Stories</a></li>
</ul>

<p>Zdroj: Mailing list</p>

<a name="biochemik"></a>
<h3>pre biochemika</h3>

<p>Vyšlo v celku hojné množstvo kníh na tému Perl a Bioinformatika:
</p>

<ul>
	<li><a href="http://glasnost.itcarlow.ie/~biobook/">Bioinformatics, Biocomputing and Perl</a></li>
    <li><a href="http://www.amazon.com/Genomic-Perl-Bioinformatics-Basics-Working/dp/052180177X/ref=sr_1_12/102-9405575-1355308?ie=UTF8&amp;s=books&amp;qid=1223151403&amp;sr=1-12">
    	Genomic Perl: From Bioinformatics Basics to Working Code</a></li>
    <li><a href="http://www.amazon.com/Perl-Bioinformatics-Second-Arun-Jagota/dp/0970029748/ref=sr_1_7/102-9405575-1355308?ie=UTF8&amp;s=books&amp;qid=1223151403&amp;sr=1-7">
    	Perl for Bioinformatics, Second Edition</a></li>
    <li><a href="http://www.amazon.com/Beginning-Perl-Bioinformatics-James-Tisdall/dp/0596000804/ref=sr_1_1/102-9405575-1355308?ie=UTF8&amp;s=books&amp;qid=1223151403&amp;sr=1-1">
    	Beginning Perl for Bioinformatics</a></li>
    <li><a href="http://www.amazon.com/Perl-Programming-Biologists-Curtis-Jamison/dp/0471430595/ref=sr_1_14/102-9405575-1355308?ie=UTF8&amp;s=books&amp;qid=1223151980&amp;sr=1-14">
    	Perl Programming for Biologists</a></li>
</ul>

<p>Existuje tiež BioPerl komunita ktorá vyvíja BioPerl Toolkit, čo je zbierka
Perl modulov užitočných pri riešení bioinformatických problémov. BioPerl sa nachádza
na <a href="http://bioperl.org/">http://bioperl.org/</a>.
</p>


<p>Zdroj:
<a href="http://use.perl.org/">use.perl.org</a>,
<a href="http://bioperl.org/">bioperl.org</a>,
<a href="http://amazon.com/">amazon.com</a>
</p>

<a name="filozof"></a>
<h3>pre filozofa</h3>

<p>Respektíve pre toho čo má rád argumenty.</p>

<cite>História miluje predstavu osamoteného vynálezcu. História sa mýli.
Úspešné firmy sú založené a vedené k úspechu aspoň dvoma a obyčajne
viacerými spriaznenými dušami. -Guy Kawasaki

</cite>

<p>Na slovensku sa hovorí, že - <cite>Jedna lastovička jar nerobí.</cite>
Jeden šikovný človek v tíme nestačí. A čím by sa viacej vystrkoval spomedzi
ostatných,tým by bol menej pochopený a menej akceptovaný. Poprípade by nemal
nikoho kto by mu vedel oponovať. Čo nie je zdravé ani pre firmu ani pre tím.
Ale nájsť niekoho kto je s nami na rovnakej vlnovej dĺžke je veľmi ťažké.
Keď sa tak však stane vzniká rezonancia!
</p>

<p>Jedna teória hovorí, že všetko tu už bolo. Aj keď je náš vynálezca
sám so svojím, ešte neuznaným, nápadom. Nikdy nezačína od nuly, vždy sa
opiera o myšlienky a nápady tých, čo skúšali podobné veci pred ním.
</p>

<p>Presne túto vlastnosť si najviac cením na programovacom jazyku
<a href="http://www.perl.org/">Perl</a>. Konkrétne na stránke
<a href="http://www.cpan.org/">Comprehensive Perl Archive Network</a>
sa momentálne nachádza viac ako 14 tisíc univerzálnych riešení problémov
od viac ako 6 tisíc autorov z hádam akejkoľvek oblasti -  informatika,
matematika, chémia, fyzika, ... Netreba vymýšľať vymyslené,
riešiť už vyriešené. Poprípade ak máme iný názor na riešenie problému
nič nám nebráni sa najskôr poučiť z riešenia iných a potom ukázať svoj
prístup. Je to ako mať v tíme 6 tisíc kolegov!
</p>

<p>Zdroj: <a href="[% content_root %]review/the-myths-of-innovation.html">recenzia knihy The Myths of Innovation</a></p>


<a name="financnik"></a>
<h3>pre finančníka</h3>

<p>Perl má viac ako 150 modulov pre <a href="http://search.cpan.org/search?m=module&amp;q=finance&amp;s=1&amp;n=100">Finance::</a>,
z ktorých je najznámejší <a href="http://search.cpan.org/perldoc?Finance::Quote">Finance::Quote</a> umožňujúci
získavať informácie o akciách a o investičných fondoch z rôznych búrz:
</p>

<pre>
Finance::Quote::AEX - Obtain quotes from Amsterdam Euronext eXchange  
Finance::Quote::AIAHK -  
Finance::Quote::ASEGR - Obtain quotes from Athens Stock Exchange.  
Finance::Quote::ASX - Obtain quotes from the Australian Stock Exchange.  
Finance::Quote::BMONesbittBurns - Obtain quotes from the BMO NesbittBurns site  
Finance::Quote::Bourso - Obtain quotes from Boursorama.  
Finance::Quote::Cdnfundlibrary - Obtain mutual fund prices from www.fundlibrary.com  
Finance::Quote::DWS - Obtain quotes from DWS (Deutsche Bank Gruppe).  
Finance::Quote::Deka - Obtain fonds quotes from DekaBank.  
Finance::Quote::FTPortfolios - Obtain unit trust prices from www.ftportfolios.com  
Finance::Quote::Fidelity - Obtain information from Fidelity Investments.  
Finance::Quote::FinanceCanada - Obtain stock and mutual fund prices from finance.canada.com  
Finance::Quote::Fool - Obtain quotes from the Motley Fool web site.  
Finance::Quote::HEX - Obtain quotes from the Helsinki Stock Exchange.  
Finance::Quote::IndiaMutual - Obtain Indian mutual fund prices from amfiindia.com  
Finance::Quote::LeRevenu - Obtain quotes from http://bourse.lerevenu.com.  
Finance::Quote::ManInvestments - Obtain quotes from Man Investments Australia.  
Finance::Quote::NZX - Obtain quotes from NZX (New Zealand stock exchange.)  
Finance::Quote::Platinum - Obtain quotes from the Platinum Asset Management.  
Finance::Quote::SEB - Obtain fund prices from www.seb.se  
Finance::Quote::StockHouseCanada -  
Finance::Quote::TSP - Obtain fund prices for US Federal Government Thrift Savings Plan  
Finance::Quote::Tdefunds - Obtain quotes from TD Waterhouse Efunds  
Finance::Quote::Tdwaterhouse - Obtain quotes from TD Waterhouse Canada  
Finance::Quote::Tiaacref - Obtain quote from TIAA-CREF.  
Finance::Quote::Troweprice - Obtain quotes from T. Rowe Price  
Finance::Quote::Trustnet - Obtain unit trust prices from trustnet.co.uk  
Finance::Quote::USFedBonds - Get US Federal Bond redemption values directly from the treasury at
                             www.publicdebt.treas.gov/sav/savvalue.htm  
Finance::Quote::Union -  
Finance::Quote::UserAgent -  
Finance::Quote::VWD -  
Finance::Quote::Yahoo::Asia - Fetch quotes from Yahoo Asia  
Finance::Quote::Yahoo::Australia - Fetch Australian stock quotes via Yahoo.  
Finance::Quote::Yahoo::Base - Common functions for fetching Yahoo info.  
Finance::Quote::Yahoo::Brasil - Fetch Brasiln stock quotes via Yahoo.  
Finance::Quote::Yahoo::Europe - Fetch quotes from Yahoo Europe  
Finance::Quote::Yahoo::NZ -  
Finance::Quote::Yahoo::USA - Obtain information about stocks and funds in the USA and Canada.  
Finance::Quote::ZA - Obtain South African stock and prices from www.sharenet.co.za  
</pre>

<p>
Tu je príklad ako sa dajú získať informácie z USA o firme "HEWLETT PACKARD C":
</p>

<pre>
perl -MData::Dumper -MFinance::Quote -le '$q = Finance::Quote->new;print Dumper({ $q->fetch("usa","HPQ") });'
</pre>

Výstup je nasledujúci:

<pre>
$VAR1 = {
          'HPQ_avg_vol' => '18551800',
          'HPQ_name' => 'HEWLETT PACKARD C',
          'HPQ_div_date' => 'Oct  1',
          'HPQ_success' => 1,
          'HPQ_ask' => undef,
          'HPQ_high' => '45.11',
          'HPQ_time' => '10/3/2008',
          'HPQ_year_range' => '39.99 - 53.48',
          'HPQ_day_range' => '42.62 - 45.11',
          'HPQ_symbol' => 'HPQ',
          'HPQ_last' => '43.00',
          'HPQ_volume' => '25798676',
          'HPQ_currency' => 'USD',
          'HPQ_price' => '43.00',
          'HPQ_pe' => '13.40',
          'HPQ_eps' => '3.228',
          'HPQ_ex_div' => 'Sep  8',
          'HPQ_net' => '-0.26',
          'HPQ_bid' => undef,
          'HPQ_open' => '43.09',
          'HPQ_date' => '00/00/2000',
          'HPQ_div' => '0.32',
          'HPQ_cap' => '105.3B',
          'HPQ_method' => 'yahoo',
          'HPQ_close' => '43.26',
          'HPQ_isodate' => '2000-00-00',
          'HPQ_p_change' => '-0.60',
          'HPQ_div_yield' => '0.74',
          'HPQ_low' => '42.62'
        };
</pre>

<p>Alebo modul <a href="http://search.cpan.org/perldoc?Finance::Currency::Convert::Yahoo">Finance::Currency::Convert::Yahoo</a>
ponúka prístup k kurzovému lístku na Yahoo Finance. Tu je príklad ako sa dá zistit koľko je EUR je 100 USD:
</p>

<pre>
perl -MFinance::Currency::Convert::Yahoo -le 'print Finance::Currency::Convert::Yahoo::convert(100,'USD','EUR');'
</pre>

<p>Výstupom je:</p>

<pre>
72.55
</pre>

<p>Zdroj:
<a href="http://search.cpan.org/search?m=module&amp;q=finance&amp;s=1&amp;n=100">search.cpan.org</a>
</p>

<a name="hacker"></a>
<h3>pre Hackera</h3>

<p>Pre hackerov je Perl ako ušitý. :-) Perl poskytuje voľnosť ktorú mnohý oceňujú
a môžu sa v ňom plne zrealizovať. Nasledujúce bloky sú plne funkčné Perl programy
Čo je ostatne vidieť na prvý pohľad (nie?), ale pre istoru to tu spomeniem ;-).</p>

<pre>
#Erudil from http://www.perlmonks.com/
#!/usr/bin/perl -w                                      # camel code
use strict;
                                           $_=&#39;ev
                                       al(&quot;seek\040D
           ATA,0,                  0;&quot;);foreach(1..3)
       {&lt;DATA&gt;;}my               @camel1hump;my$camel;
  my$Camel  ;while(             &lt;DATA&gt;){$_=sprintf(&quot;%-6
9s&quot;,$_);my@dromedary           1=split(//);if(defined($
_=&lt;DATA&gt;)){@camel1hum        p=split(//);}while(@dromeda
 ry1){my$camel1hump=0      ;my$CAMEL=3;if(defined($_=shif
        t(@dromedary1    ))&amp;&amp;/\S/){$camel1hump+=1&lt;&lt;$CAMEL;}
       $CAMEL--;if(d   efined($_=shift(@dromedary1))&amp;&amp;/\S/){
      $camel1hump+=1  &lt;&lt;$CAMEL;}$CAMEL--;if(defined($_=shift(
     @camel1hump))&amp;&amp;/\S/){$camel1hump+=1&lt;&lt;$CAMEL;}$CAMEL--;if(
     defined($_=shift(@camel1hump))&amp;&amp;/\S/){$camel1hump+=1&lt;&lt;$CAME
     L;;}$camel.=(split(//,&quot;\040..m`{/J\047\134}L^7FX&quot;))[$camel1h
      ump];}$camel.=&quot;\n&quot;;}@camel1hump=split(/\n/,$camel);foreach(@
      camel1hump){chomp;$Camel=$_;y/LJF7\173\175`\047/\061\062\063\
      064\065\066\067\070/;y/12345678/JL7F\175\173\047`/;$_=reverse;
       print&quot;$_\040$Camel\n&quot;;}foreach(@camel1hump){chomp;$Camel=$_;y
        /LJF7\173\175`\047/12345678/;y/12345678/JL7F\175\173\0 47`/;
         $_=reverse;print&quot;\040$_$Camel\n&quot;;}&#39;;;s/\s*//g;;eval;   eval
           (&quot;seek\040DATA,0,0;&quot;);undef$/;$_=&lt;DATA&gt;;s/\s*//g;(   );;s
             ;^.*_;;;map{eval&quot;print\&quot;$_\&quot;&quot;;}/.{4}/g; __DATA__   \124
               \1   50\145\040\165\163\145\040\157\1 46\040\1  41\0
                    40\143\141  \155\145\1 54\040\1   51\155\  141
                    \147\145\0  40\151\156 \040\141    \163\16 3\
                     157\143\   151\141\16  4\151\1     57\156
                     \040\167  \151\164\1   50\040\      120\1
                     45\162\   154\040\15    1\163\      040\14
                     1\040\1   64\162\1      41\144       \145\
                     155\14    1\162\       153\04        0\157
                      \146\     040\11     7\047\         122\1
                      45\15      1\154\1  54\171          \040
                      \046\         012\101\16            3\16
                      3\15           7\143\15             1\14
                      1\16            4\145\163           \054
                     \040            \111\156\14         3\056
                    \040\         125\163\145\14         4\040\
                    167\1        51\164\1  50\0         40\160\
                  145\162                              \155\151
                \163\163                                \151\1
              57\156\056
</pre>
<pre>
#!/usr/bin/perl
#Clinton Pierce
#note: Requires 5.6.0 or better

                    &#39;% * % % * % %&lt;&gt;
               * % ~ * % % * % * * % *      *
       * % % * *   % * % *&lt;&gt; * % ~   % % % * %
     *  * * % * % % % % * % % % % % % * % % * %
     % * % % ^ * % % % % *[] % % * * % * * % %  %
      % * %   % % % % % * * % * * @ *   @ % * % %
    % ^ % * % * % * * % % * %  &lt;&gt; % % % % * % %() %
  % % * * * % % * % % * * % * * * * % * * % % * * *
   %   * * * % % * % % *[]&lt;&gt; % % % % * % * * * % % *&lt;&gt;
 % * *  % % % * * % * * * \ * %\ * * *   %/ \ # % * *
  % % % *\ * /\ * *// %  %\ &lt;&gt;\ // % %/ % \// % * %
    * * *\ \|| \ \/ / % %// \ \ *\ /&lt;&gt; %//  %// % %&lt;&gt;
   * % * %\  \  |   | ||// % || //  \// % // * * * %
   %{} %  * ----\   \ | /   %||//   /  ---/ / * % % *
     % *  *\ ____\   \| |    /  /  /   /----/ * %
            \ ----\     |   /   //    /
                   \     \ /        /&#39;
                    =~m/(.*)/s;$_=$1;
                     s![-\\|_/\s]!!g
                       ;%e=(&#39;%&#39;,0,
                       &#39;^&#39;,132918,
                       &#39;~&#39;=&gt;18054,
                       &#39;@&#39;=&gt;19630,
                       &#39;*&#39; =&gt;0b01,
                       &#39;#&#39;=&gt;13099,
                       &#39;[]&#39;=&gt;4278,
                       &#39;&lt;&gt;&#39;=&gt;2307,
                       &#39;{}&#39;=&gt;9814,
                       &#39;()&#39;,2076);
                       for $a(keys
                       %e){$e{$a}=
                       sprintf&quot;%b&quot;
                       , $e{$a};}
                     $y= qq{(}.join(
                     &#39;|&#39;,map &quot;\Q$_\E&quot;
                   ,keys %e).qq{)};s/$y
              /$e{$1}/gex;print pack&quot;B*&quot;,$_;
</pre>

<p>Ak som niekoho práve vydesil, že toto teda nemôže byť jazyk v ktorom sa
dá naprogramovať niečo slušné a tobôž nie na enterprise úrovni tak nech si
pozrie <a href="#manager">sekciu pre manažéra</a> aké nástroje má Perl na to aby
udržal jednotný štýl písania zdrojových kódov.
</p>

<p>Zdroj: <a href="http://www.cpan.org/misc/japh">http://www.cpan.org/misc/japh</a></p>


<a name="admin"></a>
<h3>pre unix administrátora</h3>

<p><a href="http://upload.wikimedia.org/wikipedia/commons/1/11/Unix-history.svg">Unix</a>
administrátori vedia, že za mnohými príkazmi v systéme sa skrýva
práve Perl.</p>

<ul>
    <li>adduser, deluser</li>
    <li>rsnapshot</li>
    <li>apt-file</li>
    <li>dh_* (in Debian)</li>
    <li>caff</li>
    <li>git-svn</li>
    <li>ipcalc</li>
    <li>svk</li>
    <li>svnnotify</li>
    <li>xen-* (xen-tools)</li>
    <li>atď.</li>
</ul>

<p>Projekty napísané v Perli:</p>

<ul>
    <li><a href="http://oss.oetiker.ch/smokeping/">Smokeping</a></li>
    <li><a href="http://www.webmin.com/">Webmin</a></li>
    <li><a href="http://oss.oetiker.ch/mrtg/">MRTG</a></li>
    <li><a href="http://otrs.org/">OTRS</a></li>
    <li><a href="http://www.bugzilla.org/">Bugzilla</a></li>
    <li><a href="http://tinyca.sm-zone.net/">TinyCA</a></li>
    <li><a href="http://apachegallery.dk/">Apache::Gallery  </a></li>
    <li>atď.</li>
</ul>


<a name="manager"></a>
<h3>pre manažéra programátorskéha tímu</h3>

<p>Starať sa o tlupu programátorov a uržiavať ich na uzde nieje jednoduchá úloha.
Aké nástroje ponúka Perl na to aby sa v ňom efektívne, spolahlivo a tímovo
programovalo?
</p>

<p>Pri programovaní v Perle nik nieje sám. Bez <a href="http://www.cpan.org/">CPAN</a>-u
si už Perl programátori nevedia ani predstaviť svoj život. Nachádza sa tu viac ako
14000 hotových balíčkou (viac ako 900MB skomprimovaných zdrojových kódov) s riešeniami pre
rôzne problémy. To je slušný základ kódu na začanie akéhokoľvek
projektu.
</p>

<p>Rovnako ako sú organizované a inštalované balíčky verejných modulov pre CPAN
dajú sa vytvárať, organizovať a inštalovať privátne - vnútro firemné. Spôsob "ako"
je štandardný, dobre zavedený a ani nováčikovia čo prídu do tímu s ním nebudú
mať problém bez akéhokoľvek školenia.
</p>

<p>Štandardná výbava balíčkov je adresár <code>t/</code> kde sa nachádzajú
testy. Tým vďačí Perl za svoju kvalitu. Skôr ako sú moduly z balíčka
nainštalované, musia všetky testy prebehnúť bez chyby. Výstupom z testov
je takzvaný <a href="http://testanything.org/">TAP - Test Anything Protocol</a>.
Tu je príklad TAP výstupu:
</p>

<pre>
1..26
ok 1 - validate html/contact.html
not ok 2 - validate html/job.html
#   Failed test 'validate html/job.html'
#   at script/vxml line 80.
# died: html/job.html:68: parser error : xmlParseEntityRef: no name
# &lt;h1&gt;Info &amp; More&lt;/h1&gt;
#           ^ at script/vxml line 79
ok 3 - validate html/wien-justin.html
ok 4 - validate html/index.html
ok 5 - validate html/other.html
ok 6 - validate html/links.html
ok 7 - validate html/events.html
ok 8 - validate html/news.rdf
... cut ...
ok 26 - validate html/go/workshop/index.html
# Looks like you failed 1 test of 26.
</pre>

<p>Existuje niekoľko univerzálnych testov ktoré dávajú pozor na to
aby programátor nezabudol na dokumentáciu, poprípade nezačal písať iným
štýlom ako je dohodnutý v tíme. Tu sú príklady:
</p>

<pre>
<a href="[% relative_root %]t/00-compile.t">00-compile.t</a>   - prejde všetky zdrojové súbory a zistí či sa dajú zkompilovať
<a href="[% relative_root %]t/distribution.t">distribution.t</a> - skontroluje či všetky meta súbory balíka sú v poriadku
                 a aktuálne
<a href="[% relative_root %]t/perlcritic.t">perlcritic.t</a>   - <a href="http://search.cpan.org/perldoc?Test::Perl::Critic">Test::Perl::Critic</a> prejde všetky zdrojové súbory a 
<a href="[% relative_root %]t/perlcriticrc">+perlcriticrc</a>      skontroluje či ich štýl súhlasí so zadefinovanými
<a href="[% relative_root %]t/perltidy.conf">+perltidy.conf</a>     pravidlami
<a href="[% relative_root %]t/pod-coverage.t">pod-coverage.t</a> - skontroluje či všetky funkcie majú dokumentáciu
<a href="[% relative_root %]t/pod-spell.t">pod-spell.t</a>    - skontroluje pravopis v dokumentácií
<a href="[% relative_root %]t/pod.t">pod.t</a>          - skontroluje formátovanie dokumentácie
<a href="[% relative_root %]t/signature.t">signature.t</a>    - skontroluje integritu súborov v balíčku
</pre>

<p>Tu je na ukážku výstup z <code>perlcritic.t</code>:</p>

<pre>
t/perlcritic....NOK 1/2#   Failed test 'Test::Perl::Critic for "script/generate-feed.pl"'
#   at /usr/share/perl5/Test/Perl/Critic.pm line 99.
# 
# Perl::Critic found these violations in "script/generate-feed.pl":
# Code is not tidy at line 1, column 1.  See page 33 of PBP.  (Severity: 1)
# Missing "AUTHOR" section in POD at line 1, column 1.  See pages 133,138 of PBP.  (Severity: 2)
# Missing "COPYRIGHT" section in POD at line 1, column 1.  See pages 133,138 of PBP.  (Severity: 2)
# No "VERSION" variable found at line 1, column 1.  See page 404 of PBP.  (Severity: 2)
...
</pre>

<p>Na objasnenie - Pod je skratka pre <a href="http://perldoc.perl.org/perlpod.html">"Plain
Old Documentation format"</a> čo je spôsob
dokumentovania zdrojového kódu pomocou ktorého sa píše dokumentácia zároveň so
samotným programom.
PBP je skratka pre <a href="http://oreilly.com/catalog/9780596001735/index.html">knihu "Perl Best Practices"</a>
ktorá je zbierka doporučení akým štýlom programovať v Perle.
</p>


<a name="plprogramátor"></a>
<h3>pre Perl programátora</h3>

<a name="zaciatocnik"></a>
<h4>začiatočníka</h4>

<p>Asi najdôležitejsie v začiatkoch, je sa vedieť zorientovať. Je pekné mať
&gt;62 tisíc modulov, ale keď sa má z nich potom vybrať to užitočné je to trochu
problém. Čo by teda nemalo ujsť pozornosti?
</p>

<ul>
    <li><a href="http://search.cpan.org/perldoc?DBI">DBI</a> - Databázovo
    nezávyslé rozhranie pre Perl. Vďaka tomuto modulu sa môžu Perl programi
    bežať s rôznymi databázami bez toho aby sa zmenil jediný riadok kódu.
    Proste sa len zmenia parametre pripojenie. Zoznam podporovaných databáz
    nekončí pri
    <a href="http://search.cpan.org/perldoc?DBD::Oracle">Oracle</a>,
    <a href="http://search.cpan.org/perldoc?DBD::Pg">PostgreSQL</a>,
    <a href="http://search.cpan.org/perldoc?DBD::mysql">MySQL</a>,
    <a href="http://search.cpan.org/perldoc?DBD::ODBC">ODBC</a>,
    <a href="http://search.cpan.org/perldoc?DBD::DB2">DB2</a>,
    atď. Abstrakcia taká silná, že sú napísané DBI drivery pre
    <a href="http://search.cpan.org/perldoc?DBD::CSV">CSV</a>,
    <a href="http://search.cpan.org/perldoc?DBD::Excel">Excel</a> alebo dokonca
    <a href="http://search.cpan.org/perldoc?DBD::PO">.po</a>
    súbory. Tu je kompletný zoznam
    <a href="http://search.cpan.org/search?m=module&amp;q=dbd%3A%3A&amp;s=1&amp;n=100">DBD::&nbsp;modulov</a>
    </li>
    <li><a href="http://search.cpan.org/perldoc?CGI">CGI</a> - "Common Gateway
    Interface (skrátene CGI) je protokol na prepojenie externých aplikácií s
    webovým serverom. To webovému serveru umožňuje delegovať požiadavku od klienta
    na externú aplikáciu, která podľa požadavky vrátí výstup webovému serveru,
    ktorý pošle výstup ďalej webovému klientovi." -Wikipédia. Vďaka CGI zažil
    web prerod zo statického obsahu na dynamocký a nemalou mierou sa o to
    zaslúžil aj CGI Perl modul. Aj dnes v dobe prepracovaných "frejmvórkov"
    je užitočný ak treba spraviť jednoduchšie interaktívne web stránky.
    </li>
    <li><a href="http://search.cpan.org/perldoc?LWP::UserAgent">LWP::UserAgent</a> -
    Web user agent je základ pre mnohé moduly ktoré stoja na druhej strane web-u
    na strane klienta. Tu je on-liner príklad ako sa dá stiahnuť úvodná stránka z
    <a href="http://ba.pm.org/">http://ba.pm.org/</a>:
    <pre>
        perl -MLWP::UserAgent -le 'print LWP::UserAgent->new->get("http://ba.pm.org/")->content'
    </pre>
    </li>
    <li><a href="http://search.cpan.org/perldoc?Test::WWW::Mechanize">Test::WWW::Mechanize</a> -
    modul ktorý práve využíva LWP. Tu je príklad krátkeho (ale kompletného) test skriptu ktorý
    vie zistiť či je všetko vporiadku na našej stránke:
    <pre>
        #!/usr/bin/perl

        use Test::More tests => 5;
        use Test::WWW::Mechanize;

        my $mech = Test::WWW::Mechanize->new;
        $mech->get_ok( 'http://ba.pm.org/' );
        $mech->title_is( 'Bratislava Perl Mongers' );
        $mech->content_contains( 'Job' );
        $mech->content_contains( 'Kontakt' );
        $mech->links_ok( 'events.html' );
    </pre>
    </li>
    <li><a href="http://search.cpan.org/perldoc?Getopt::Long">Getopt::Long</a> - 
    aby nebolo všetko len ohľadne web-u tu je príklad z rodiny
    <a href="http://search.cpan.org/search?m=module&amp;q=getopt%3A%3A&amp;s=1&amp;n=100">Getopt::</a>
    ako sa dá napísať skript čo reaguje na prepínače z príkazového riadku -
    <a href="[% relative_root %]scripts/getoptlong">getoptlong</a>. Pozná '-h' pre help, '-l' obyžajný
    prepínač, prepínač '-t' s textom ktorý ho musí nasledovať + vypíše zvyšné argumenty ak
    sú nejaké zadané.
    </li>
    <li><a href="http://search.cpan.org/perldoc?GTK2">GTK2</a> - 
    a pre priaznivcov GUI tu je príklad "aplikácie" ktorá obsahuje jedno klikatelné
    tlačítko ktorého funkciou je ju ukončiť :-)
    <pre>
        #!/usr/bin/perl
        use Gtk2 -init;
        my $window = Gtk2::Window->new ('toplevel');
        my $button = Gtk2::Button->new ('Quit');
        $button->signal_connect (clicked => sub { Gtk2->main_quit });
        $window->add ($button);
        $window->show_all;
        Gtk2->main;
    </pre>
    </li>
</ul>


<p>Žačiatočníkov určite potešia veci čo im uľachčia prácu. Jedna z nich je
určite <a href="http://search.cpan.org/perldoc?ack">Ack</a>. Štačí nainštalovať
<a href="http://search.cpan.org/perldoc?App::Ack">App::Ack</a> z CPAN-u
a do systému pribudne príkaz `ack` ktorý sa tvári trochu ako grep, ale nieje
ním úplne. Ack na predvolené, že vyhľadáva len v súboroch určitých prípon a
v niektorých prípadoch obsahu. Pre vyhľadávaní ignoruje napríklad <i>.svn/</i>
adresáre. Pre programátora je to ideálna náhrada príkazu grep.
</p>

<a name="pokrocily"></a>
<h4>pokročilého</h4>

<p>Pre pokročilých Perl programátorov je tu zbierka krátkych skriptov ktorých
autorom je <a href="http://damian.conway.org/About_us/Bio_formal.html">Damian Conway</a>
autor knižky Perl
<a href="http://oreilly.com/catalog/9780596001735/index.html">Best Practices</a>
</p>

<ul>
    <li><a href="[% relative_root %]scripts/calc">calc</a> - jednoduchá kalkulačka umožňujúca referovať na predchádzajúce výsledky</li>
<!--
    <li><a href="[% relative_root %]scripts/column">column</a> - </li>
-->
    <li><a href="[% relative_root %]scripts/entar">entar</a> - z-tar-uje niekolko súborov ak treba skomprimuje alebo z-uuencode-uje</li>
    <li><a href="[% relative_root %]scripts/findword">findword</a> - prehľadá /usr/share/dict/words</li>
    <li><a href="[% relative_root %]scripts/ruler">ruler</a> - v ascii "nakreslí" pravítka</li>
    <li><a href="[% relative_root %]scripts/uniq">uniq</a> - pokročilý príkaz uniq</li>
</ul>



<a name="gurusk"></a>
<h4>gurua</h4>

<p>Perl guru je cool some o sebe, už nič viac nepotrebuje ;-)</p>


<a name="zena"></a>
<h3>pre Ženu</h3>

<p>Celosvetový rožný priemerný plat Perl programátora/programátorky je $68,687 USD. ;-)</p>
<p>~4% ľudí programujúcich v Perle sú ženy.</p>
<p>Ženám sa určite bude páčiť respektíve určite ocenia:</p>

<pre>
      $LOVE=               AMOUR.
    true.cards.        ecstacy.crush 
  .hon.promise.de    .votion.partners.
 tender.truelovers. treasure.affection.
devotion.care.woo.baby.ardor.romancing.
enthusiasm.fealty.fondness.turtledoves.
lovers.sentiment.worship.sweetling.pure
.attachment.flowers.roses.promise.poem;
 $LOVE=~ s/AMOUR/adore/g; @a=split(//,
  $LOVE); $o.= chr (ord($a[1])+6). chr
   (ord($a[3])+3). $a[16]. $a[5]. chr
    (32). $a[0]. $a[(26+2)]. $a[27].
      $a[5].$a[25]. $a[8].$a[3].chr
        (32).$a[29]. $a[8].$a[3].
          $a[62].chr(32).$a[62].
           $a[2].$a[38].$a[4].
               $a[3].'.';
                 print
                  $o; 
</pre>


<p>Zdroj: Perl Survey 2007</p>

